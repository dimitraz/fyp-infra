---
# This playbook contains plays to deploy all of the services
# and functions needed to run my final year project

- template:
    src: mongo-stateful-set.yml.j2
    dest: /tmp/mongo-stateful-set.yaml

- name: Create trigger controller deployment
  command: "kubectl create -f /tmp/mongo-stateful-set.yaml"
  register: result
  failed_when: result.stderr != "" and "already exists" not in result.stderr

- name: Wait for Mongo to start
  shell: "kubectl get pods -o json"
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  retries: 40
  delay: 5

- file: path=/tmp/mongo-stateful-set.yaml state=absent

- name: Clone the repo
  git:
    repo: git@github.com:dimitraz/serverless-consumer.git
    dest: ~/Desktop/services/serverless-consumer
    clone: yes
    recursive: yes
    force: yes
    accept_hostkey: yes
    version: master
    key_file: "~/.ssh/id_rsa"
  delegate_to: localhost

- name: Deploy the function
  shell: "cd  ~/Desktop/services/serverless-consumer && kubeless function deploy js-consumer --runtime nodejs6 --handler handler.consume --from-file handler.js --dependencies package.json"

- name: Create a trigger
  shell: "kubeless trigger kafka create consumer-trigger --function-selector function=js-consumer,created-by=kubeless --trigger-topic vital-signs"

- name: Clone the ai prediction repo
  git:
    repo: git@github.com:dimitraz/ai-medical-prediction.git
    dest: ~/Desktop/services/ai-medical-prediction
    clone: yes
    recursive: yes
    force: yes
    accept_hostkey: yes
    version: master
    key_file: "~/.ssh/id_rsa"
  delegate_to: localhost

- name: Deploy the function
  shell: "cd  ~/Desktop/services/ai-medical-prediction && zip predict model.json handler.js group1-shard1of1 && kubeless function deploy tf-predict --runtime nodejs8 --from-file predict.zip --handler handler.predict --dependencies package.json"

- name: Create a trigger
  shell: "kubeless trigger kafka create ai-trigger --function-selector function=tf-predict,created-by=kubeless --trigger-topic vital-signs"

- template:
    src: kafka-streamer.yml.j2
    dest: /tmp/kafka-streamer.yaml

- name: Create the kafka streamer deployment and service
  command: "kubectl create -f /tmp/kafka-streamer.yaml"
  register: result
  failed_when: result.stderr != "" and "already exists" not in result.stderr

- file: path=/tmp/kafka-streamer.yaml state=absent

- template:
    src: api-gateway.yml.j2
    dest: /tmp/api-gateway.yaml

- name: Create the nginx reverse proxy api gateway
  command: "kubectl create -f /tmp/api-gateway.yaml"
  register: result
  failed_when: result.stderr != "" and "already exists" not in result.stderr

- file: path=/tmp/api-gateway.yaml state=absent
